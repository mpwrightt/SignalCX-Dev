rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users collection - simplified rules
    match /users/{userId} {
      // Users can read their own profile, authenticated users can read others
      allow read: if isAuthenticated();
      
      // Users can create/update their own profile
      allow create, update: if isAuthenticated() && isOwner(userId);
      
      // No deletes for now
      allow delete: if false;
    }

    // Organizations collection
    match /organizations/{orgId} {
      // All authenticated users can read organizations
      allow read: if isAuthenticated();
      
      // Only authenticated users can create/update organizations
      allow create, update: if isAuthenticated();
      
      // No deletes
      allow delete: if false;
    }

    // User invitations
    match /invitations/{invitationId} {
      // Authenticated users can read/write invitations
      allow read, write: if isAuthenticated();
    }

    // Audit logs - read-only
    match /audit_logs/{logId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if false;
    }

    // Settings
    match /settings/{settingId} {
      allow read, write: if isAuthenticated();
    }

    // Tickets and analytics (if used)
    match /tickets/{ticketId} {
      allow read, write: if isAuthenticated();
    }

    match /analytics/{analyticsId} {
      allow read, write: if isAuthenticated();
    }

    // Legacy collections (keep for compatibility)
    match /jobs/{jobId} {
      allow create, read: if isAuthenticated();
      allow update: if false; 
    }

    match /jobs/{jobId}/chunks/{chunkId} {
      allow read: if isAuthenticated();
      allow write: if false;
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}